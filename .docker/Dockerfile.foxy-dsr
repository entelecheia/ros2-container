# Sets the base image for subsequent instructions
FROM ghcr.io/entelecheia/ros2:latest-foxy AS builder

# Sets labels for the image
LABEL org.opencontainers.image.source="https://github.com/entelecheia/ros2-container"
LABEL org.opencontainers.image.description="ROS2 Container for development and deployment"
LABEL org.opencontainers.image.licenses="MIT"

# Setting ARGs and ENVs for the app
ARG ARG_APP_INSTALL_ROOT="/opt"
ARG ARG_APP_DIRNAME="ros_ws"
ENV APP_INSTALL_ROOT $ARG_APP_INSTALL_ROOT
ENV APP_DIRNAME $ARG_APP_DIRNAME
ENV APP_SRC_DIR=${APP_INSTALL_ROOT}/${APP_DIRNAME}
ENV APP_VIRTUAL_ENV=${APP_INSTALL_ROOT}/.venvs/${APP_DIRNAME}
ENV PATH="$APP_VIRTUAL_ENV/bin:$PATH"
ENV APP_WORKSPACE_ROOT=${APP_INSTALL_ROOT}/workspace
ARG ARG_WORKSPACE_ROOT="/workspace"
ENV WORKSPACE_ROOT $ARG_WORKSPACE_ROOT
# Sets up the workspace for the user
RUN mkdir -p $WORKSPACE_ROOT/projects

# Setting ARGs and ENVs for user creation and workspace setup
ARG ARG_USERNAME="app"
ARG ARG_USER_UID=9001
ARG ARG_USER_GID=$ARG_USER_UID
ENV USERNAME $ARG_USERNAME
ENV USER_UID $ARG_USER_UID
ENV USER_GID $ARG_USER_GID

USER root
# Creates a non-root user with sudo privileges
# check if user exists and if not, create user
RUN if id -u $USERNAME >/dev/null 2>&1; then \
        # if the current user's user id is different from the specified user id, change the user id of the current user to the specified user id
        if [ "$USER_UID" -ne "$(id -u $USERNAME)" ]; then \
            usermod --uid $USER_UID $USERNAME; \
        fi; \
    else \
        groupadd --gid $USER_GID $USERNAME && \
        adduser --uid $USER_UID --gid $USER_GID --force-badname --disabled-password --gecos "" $USERNAME && \
        echo "$USERNAME:$USERNAME" | chpasswd && \
        adduser $USERNAME sudo && \
        echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers && \
        echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/$USERNAME && \
        chmod 0440 /etc/sudoers.d/$USERNAME; \
    fi

RUN mkdir -p "$APP_SRC_DIR/src"

# change the owner of the workspace to the specified user id
RUN chown --recursive $USER_UID:$USER_UID $WORKSPACE_ROOT
RUN chown --recursive $USER_UID:$USER_UID $APP_INSTALL_ROOT

USER $USERNAME
# Symbolic link to the app source directory
RUN ln -s "$APP_SRC_DIR" "/home/$USERNAME/$APP_DIRNAME" 
RUN cd "$APP_SRC_DIR/src" \
    && git clone https://github.com/doosan-robotics/doosan-robot2.git \
    && git clone https://github.com/ros-controls/ros2_control.git \
    && git clone https://github.com/ros-controls/ros2_controllers.git \
    && git clone https://github.com/ros-simulation/gazebo_ros2_control.git \
    && cd ros2_control && git reset --hard 3dc62e28e3bc8cf636275825526c11d13b554bb6 && cd .. \
    && cd ros2_controllers && git reset --hard 83c494f460f1c8675f4fdd6fb8707b87e81cb197 && cd .. \
    && cd gazebo_ros2_control && git reset --hard 3dfe04d412d5be4540752e9c1165ccf25d7c51fb && cd .. \
    && git clone -b ros2 --single-branch https://github.com/ros-planning/moveit_msgs

# Copies scripts from host into the image
COPY ./.docker/scripts /home/$USERNAME/scripts/
# RUN pip install -r ./scripts/requirements-base.txt
RUN bash "/home/$USERNAME/scripts/ros2_ws_build.sh"
RUN echo "source $APP_SRC_DIR/install/setup.bash" >> ~/.bashrc

# Switches to the root user
USER root

# Specifies the command that will be executed when the container is run
CMD ["bash"]
